
builder.CreateFile("xlsx");

var mainHeaderFontSize = 24;
var headerFontSize = 14;
var chartHeaderFontSize = 12;
var smallFontSize = 10;
var legendFontSize = 9;

var blackFontColor = Api.CreateColorFromRGB(63, 63, 63);
var grayFontColor = Api.CreateColorFromRGB(127, 127, 127);

var lightGrayBgColor = Api.CreateColorFromRGB(242, 242, 242);
var darkGrayBgColor = Api.CreateColorFromRGB(216, 216, 216);

var lightGrayBorderColor = Api.CreateColorFromRGB(216, 216, 216);
var darkGrayBorderColor = Api.CreateColorFromRGB(127, 127, 127);

var reportData = ${reportData};

reportData.resource.sheetName = reportData.resource.sheetName.slice(0, 31);

var oWorksheet = Api.GetActiveSheet();

function toColumnName(num) {
    for (var res = '', a = 1, b = 26; (num -= a) >= 0; a = b, b *= 26) {
        res = String.fromCharCode(parseInt((num % b) / a) + 65) + res;
    }
    return res;
}

function customizeWorksheet() {
    Api.SetThemeColors("Origin");

    oWorksheet.SetName(reportData.resource.sheetName);
    oWorksheet.SetDisplayGridlines(false);
    oWorksheet.SetColumnWidth(0, 6);
    oWorksheet.SetColumnWidth(1, 30);

    for (var i = 2; i < 35; i++) {
        oWorksheet.SetColumnWidth(i, 15);
    }
}

function writeText() {
    var sRange = oWorksheet.GetRange("B2");
    sRange.SetFontSize(mainHeaderFontSize);
    sRange.SetFontColor(blackFontColor);
    sRange.SetValue(reportData.resource.header);

    sRange = oWorksheet.GetRange("B3");
    sRange.SetFontSize(smallFontSize);
    sRange.SetFontColor(grayFontColor);
    sRange.SetBold(true);
    sRange.SetValue(reportData.resource.dateRangeLabel);

    sRange = oWorksheet.GetRange("B4");
    sRange.SetFontSize(smallFontSize);
    sRange.SetFontColor(grayFontColor);
    sRange.SetAlignHorizontal("left");
    sRange.SetNumberFormat("@");
    sRange.SetValue(reportData.resource.dateRangeValue);
}

function writeRow(startColIndex, startRowIndex, dataArray, fontSize, fontColor, bold, borderType, borderColor, bgColor, wrap) {
    var range = toColumnName(startColIndex) + startRowIndex + ":";

    for (var i = 0; i < dataArray.length; i++) {
        var cell = oWorksheet.GetRange(toColumnName(startColIndex) + startRowIndex);

        if (typeof(dataArray[i]) == "object") {
            cell.SetNumberFormat(dataArray[i].format);
            cell.SetValue(dataArray[i].value);
        } else {
            cell.SetValue(dataArray[i].toString());
        }

        if (i == 0) {
            cell.SetAlignHorizontal("left");
        } else {
            cell.SetAlignHorizontal("right");
        }

        startColIndex++;
    }

    range += toColumnName(startColIndex - 1) + startRowIndex;

    var sRange = oWorksheet.GetRange(range);

    if (fontSize)
        sRange.SetFontSize(fontSize);

    if (fontColor)
        sRange.SetFontColor(fontColor);

    if (bold)
        sRange.SetBold(true);

    if (borderType)
        sRange.SetBorders(borderType, "Thin", borderColor);

    if (bgColor)
        sRange.SetFillColor(bgColor);
	
	sRange.SetWrap(wrap || false);
}

function writeCharts(startColIndex, startRowIndex, count) {
    var chartRange1 = "$" + toColumnName(startColIndex) + "$" + (startRowIndex + 2) + ":$" + toColumnName(startColIndex + 1) + "$" + (startRowIndex + 2 + count);
    var chartRange2 = "$" + toColumnName(startColIndex) + "$" + (startRowIndex + 6 + count) + ":$" + toColumnName(startColIndex + 3) + "$" + (startRowIndex + 6 + 2 * count);

    var oChart = oWorksheet.AddChart("'" + reportData.resource.sheetName + "'!" + chartRange1, false, "bar", 2, 240 * 36000, 70 * 36000, 1, 0, 7, 0);
    oChart.SetTitle(reportData.resource.chartName, chartHeaderFontSize, false);
	oChart.ApplyChartStyle(0);
    oChart.SetLegendPos("none");
    oChart.SetLegendFontSize(legendFontSize);
    oChart.SetShowDataLabels(false, false, true, false);
    oChart.SetVertAxisTickLabelPosition("none");
    oChart.SetHorAxisLablesFontSize(legendFontSize);
    oChart.SetVertAxisLablesFontSize(legendFontSize);
    oChart.SetMajorHorizontalGridlines(Api.CreateStroke(0, Api.CreateNoFill()));
    oChart.SetMajorVerticalGridlines(Api.CreateStroke(0, Api.CreateNoFill()));

    oChart = oWorksheet.AddChart("'" + reportData.resource.sheetName + "'!" + chartRange2, false, "bar", 2, 240 * 36000, 70 * 36000, 1, 0, 21, -0.5 * 36000);
    oChart.SetTitle(reportData.resource.chartName1, chartHeaderFontSize, false);
	oChart.ApplyChartStyle(0);
    oChart.SetLegendPos("right");
    oChart.SetLegendFontSize(legendFontSize);
    oChart.SetShowDataLabels(false, false, true, false);
    oChart.SetVertAxisTickLabelPosition("none");
    oChart.SetHorAxisLablesFontSize(legendFontSize);
    oChart.SetVertAxisLablesFontSize(legendFontSize);
    oChart.SetMajorHorizontalGridlines(Api.CreateStroke(0, Api.CreateNoFill()));
    oChart.SetMajorVerticalGridlines(Api.CreateStroke(0, Api.CreateNoFill()));
}

function writeTable(startColIndex, startRowIndex) {

    var colIndex = startColIndex;
    var rowIndex = startRowIndex;

    var sRange = oWorksheet.GetRange(toColumnName(colIndex) + rowIndex);
    sRange.SetFontSize(headerFontSize);
    sRange.SetFontColor(blackFontColor);
    sRange.SetValue(reportData.resource.header1);

    rowIndex = rowIndex + 2;

    var headerRow = [reportData.resource.manager, reportData.resource.billed];
    writeRow(colIndex, rowIndex, headerRow, smallFontSize, grayFontColor, false, "Bottom", darkGrayBorderColor, null, true);
    rowIndex++;

    for (var i = 0; i < reportData.data.length; i++) {
        var item = reportData.data[i];
        var row = [item.UserName, item.SentCount];

        if (i == reportData.data.length - 1) {
            writeRow(colIndex, rowIndex, row, smallFontSize, blackFontColor, false, "Bottom", darkGrayBorderColor, null);
        } else {
            writeRow(colIndex, rowIndex, row, smallFontSize, blackFontColor, false, "Bottom", lightGrayBorderColor, null);
        }

        rowIndex++;
    }

    var startCell = toColumnName(colIndex + 1) + (startRowIndex + 3);
    var endCell = toColumnName(colIndex + 1) + (startRowIndex + 2 + reportData.data.length);
    var footerRow = [reportData.resource.total, "=SUM(" + startCell + ":" + endCell + ")"];
    writeRow(colIndex, rowIndex, footerRow, smallFontSize, blackFontColor, true, null, null, null);

    rowIndex = rowIndex + 3;


    headerRow = [reportData.resource.manager, reportData.resource.paid, reportData.resource.rejected, reportData.resource.overdue];

    writeRow(colIndex, rowIndex, headerRow, smallFontSize, grayFontColor, false, "Bottom", darkGrayBorderColor, null, true);
    rowIndex++;

    for (var i = 0; i < reportData.data.length; i++) {
        var item = reportData.data[i];
        var row = [item.UserName, item.PaidCount, item.RejectedCount, item.OverdueCount];

        if (i == reportData.data.length - 1) {
            writeRow(colIndex, rowIndex, row, smallFontSize, blackFontColor, false, "Bottom", darkGrayBorderColor, null);
        } else {
            writeRow(colIndex, rowIndex, row, smallFontSize, blackFontColor, false, "Bottom", lightGrayBorderColor, null);
        }

        rowIndex++;
    }

    footerRow = [reportData.resource.total];
    for (var i = 1; i < 4; i++) {
        startCell = toColumnName(colIndex + i) + (startRowIndex + 2 + reportData.data.length + 5);
        endCell = toColumnName(colIndex + i) + (startRowIndex + 2 + reportData.data.length + 4 + reportData.data.length);
        footerRow[i] = "=SUM(" + startCell + ":" + endCell + ")";
    }
    writeRow(colIndex, rowIndex, footerRow, smallFontSize, blackFontColor, true, null, null, null);

    writeCharts(startColIndex, startRowIndex, reportData.data.length);
}

customizeWorksheet();
writeText();

if (reportData.data && reportData.data.length) {
   writeTable(2, 39);
}

builder.SaveFile("xlsx", "${outputFilePath}");
builder.CloseFile();
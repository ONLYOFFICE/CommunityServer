<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog"/>
    <section name="autofac" type="ASC.Common.DependencyInjection.AutofacConfigurationSection, ASC.Common"/>
  </configSections>

  <system.data>
    <DbProviderFactories>
      <clear/>
      <add name="MySQL Data Provider" invariant="MySql.Data.MySqlClient" description=".Net Framework Data Provider for MySQL" type="MySql.Data.MySqlClient.MySqlClientFactory, MySql.Data"/>
    </DbProviderFactories>
  </system.data>

  <connectionStrings>
    <clear/>
    <add name="default" connectionString="Server=localhost;Database=onlyoffice;User ID=dev;Password=dev;Pooling=true;Character Set=utf8;AutoEnlist=false;SSL Mode=none" providerName="MySql.Data.MySqlClient"/>
  </connectionStrings>

  <appSettings>
    <add key="core.base-domain" value=""/>
    <add key="core.payment-partners" value="http://localhost:54832/api/"/>
  </appSettings>

  <system.serviceModel>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true"/>

    <client>
      <endpoint address="net.tcp://localhost:9866/teamlabIndex" binding="netTcpBinding" contract="ASC.ElasticSearch.Service.IService" bindingConfiguration="index"/>
    </client>

    <bindings>
      <netTcpBinding>
        <binding name="index" openTimeout="0:0:10" receiveTimeout="0:0:10" sendTimeout="0:0:10" maxReceivedMessageSize="1000000">
          <security mode="None"/>
          <readerQuotas maxStringContentLength="1000000"/>
        </binding>
      </netTcpBinding>
    </bindings>
  </system.serviceModel>

  <log4net>
    <root>
      <appender-ref ref="TraceAppender" />
      <level value="ALL"/>
    </root>
    
    <logger name="AdminLog">
      <appender-ref ref="AdminLogAppender" />
      <level value="ALL" />
    </logger>

    <appender name="AdminLogAppender" type="ASC.Core.Common.Logging.AdoNetAppender2, ASC.Core.Common">
      <bufferSize value="1"/>
      <connectionStringName value="core" />
      <reconnectOnError value="true" />
      <commandText value="insert into core_logging (user_id, tenant_id, user_email, caller_ip, action, timestamp) values (@user, @tenant, @email, @ip, @action, @timestamp)" />
      <parameter>
        <parameterName value="user" />
        <layout type="ASC.Core.Common.Logging.AdminLogLayout, ASC.Core.Common">
          <property value="user" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="tenant" />
        <layout type="ASC.Core.Common.Logging.AdminLogLayout, ASC.Core.Common">
          <property value="tenant" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="email" />
        <layout type="ASC.Core.Common.Logging.AdminLogLayout, ASC.Core.Common">
          <property value="email" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="ip" />
        <layout type="ASC.Core.Common.Logging.AdminLogLayout, ASC.Core.Common">
          <property value="ip" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="action" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%m" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="timestamp"/>
        <layout type="log4net.Layout.RawUtcTimeStampLayout" />
      </parameter>
    </appender>

    <appender name="TraceAppender" type="log4net.Appender.TraceAppender">
      <immediateFlush value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date %-5level [%thread] %logger - %message%newline"/>
      </layout>
    </appender>
  </log4net>
  
  <nlog>
    <extensions>
      <add assembly="ASC.Common"/>
    </extensions>
    <variable name="logDirectory" value="..\Logs\"/>
    <conversionPattern value=""/>
    <targets  async="true">
      <default-target-parameters type="SelfCleaning" encoding="utf-8" archiveNumbering="DateAndSequence" archiveEvery="Day" archiveAboveSize="52428800"  keepFileOpen="true" archiveDateFormat="MM-dd"  layout="${date:format=yyyy-MM-dd HH\:mm\:ss,fff} ${level:uppercase=true} [${threadid}] ${logger} - ${message}"/>
      <target name="web" type="SelfCleaning" fileName="${logDirectory}web.log" />
      <target name="sql" type="SelfCleaning" fileName="${logDirectory}web.sql.log" layout="${date:universalTime=true:format=yyyy-MM-dd HH\:mm\:ss,fff}|${threadid}|${event-properties:item=duration}|${message}|${event-properties:item=sql}|${event-properties:item=sqlParams}"/>
      <target name="files" type="SelfCleaning" fileName="${logDirectory}web.files.log"/>
      <target name="api" type="SelfCleaning" fileName="${logDirectory}web.api.log"/>
      <target name="notify" type="SelfCleaning" fileName="${logDirectory}web.notify.log" />
    </targets>

    <rules>
      <logger name="ASC.SQL" minlevel="Debug" writeTo="sql" final ="true" />
      <logger name="ASC.Files" minlevel="Debug" writeTo="files" final ="true" />
      <logger name="ASC.Api" minlevel="Debug" writeTo="api" final ="true" />
      <logger name="ASC.Notify.Messages" minlevel="Debug" writeTo="notify" final ="true" />
      <logger name="ASC*" minlevel="Trace" writeTo="web" />
    </rules>
  </nlog>
  
  <autofac>
    <components>
      <container name="core">
        <component
            type="ASC.Common.Logging.LogNLog, ASC.Common"
            service="ASC.Common.Logging.ILog, ASC.Common" />
      </container>
      <container name="api">
        <component
            type="ASC.Specific.AscApiConfiguration, ASC.Specific"
            service="ASC.Api.Interfaces.IApiConfiguration, ASC.Api"
            instance-scope="single-instance">
          <parameters>
            <parameter name="prefix" value="api" />
            <parameter name="version" value="2.0" />
            <parameter name="maxPage" value="1000" />
          </parameters>
        </component>
        <component
            type="ASC.Specific.AscCookieAuthorization, ASC.Specific"
            service="ASC.Api.Interfaces.IApiAuthorization, ASC.Api"
            instance-scope="single-instance"
            name="asc_cookie" />
        <component
            type="ASC.Specific.AscBasicAuthorization, ASC.Specific"
            service="ASC.Api.Interfaces.IApiAuthorization, ASC.Api"
            instance-scope="single-instance"
            name="asc_basic"/>
        <component
            type="ASC.Specific.Log4NetLog, ASC.Specific"
            service="ASC.Api.Logging.ILog, ASC.Api"
            instance-scope="single-instance"/>
        <component
            type="ASC.Specific.GlobalFilters.ProductSecurityFilter, ASC.Specific"
            service="ASC.Api.Attributes.ApiCallFilter, ASC.Api"
            instance-scope="single-instance"
            name="ProductSecurityFilter"/>
        <component
            type="ASC.Api.Employee.EmployeeApi, ASC.Api.Employee"
            service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
            name="people"/>
        <component
            type="ASC.Api.Employee.GroupsApi, ASC.Api.Employee"
            service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
            name="group"/>
        <component
            type="ASC.Api.Community.CommunityApi, ASC.Api.Community"
            service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
            name="community"/>
        <component
            type="ASC.Api.Projects.ProjectApi, ASC.Api.Projects"
            service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
            name="project"/>
        <component
            type="ASC.Api.Projects.ProjectBootstrap, ASC.Api.Projects"
            service="ASC.Api.Interfaces.IApiBootstrapper, ASC.Api"
            instance-scope="single-instance"
            name="projectRegistration"/>
        <component
            type="ASC.Api.CRM.CRMApi, ASC.Api.CRM"
            service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
            name="crm"/>
        <component
            type="ASC.Api.CRM.CRMBootstrap, ASC.Api.CRM"
            service="ASC.Api.Interfaces.IApiBootstrapper, ASC.Api"
            instance-scope="single-instance"
            name="crm"/>
        <component
            type="ASC.Api.Settings.SettingsApi, ASC.Api.Settings"
            service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
            name="settings"/>
        <component
            type="ASC.Api.Documents.DocumentsApi, ASC.Api.Documents"
            service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
            name="files"/>
        <component
            type="ASC.Web.Files.Services.WCFService.FileStorageServiceController, ASC.Web.Files"
            service="ASC.Web.Files.Services.WCFService.IFileStorageService, ASC.Web.Files"
            instance-scope="single-instance"/>
        <component
            type="ASC.Api.Calendar.CalendarApi, ASC.Api.Calendar"
            service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
            name="calendar"/>
        <component
            type="ASC.Specific.AuthorizationApi.AuthenticationEntryPoint, ASC.Specific"
            service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
            name="authentication"/>
        <component
            type="ASC.Specific.CapabilitiesApi.CapabilitiesEntryPoint, ASC.Specific"
            service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
            name="capabilities"/>
        <component
            type="ASC.Api.Feed.FeedApi, ASC.Api.Feed"
            service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
            name="feed"/>
        <component
            type="ASC.Api.Security.SecurityApi, ASC.Api.Security"
            service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
            name="security"/>
        <component
            type="ASC.Api.MailServer.MailServerApi, ASC.Api.MailServer"
            service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
            name="mailserver"/>
        <component
            type="ASC.Api.Mail.MailApi, ASC.Api.Mail"
            service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
            name="mail"/>
        <component
            type="ASC.Api.Portal.PortalApi, ASC.Api.Portal"
            service="ASC.Api.Interfaces.IApiEntryPoint, ASC.Api"
            name="portal"/>
        <component
            type="ASC.Api.Impl.ApiManager, ASC.Api"
            service="ASC.Api.Interfaces.IApiManager, ASC.Api"
            instance-scope="single-instance"
            inject-properties="yes"/>
        <component
            type="ASC.Api.Impl.ApiSmartListResponceFilter, ASC.Api"
            service="ASC.Api.Interfaces.IApiResponceFilter, ASC.Api"
            inject-properties="yes"
            name="smartfilter">
        </component>
        <component
            type="ASC.Api.Impl.ApiMethodCall, ASC.Api"
            service="ASC.Api.Interfaces.IApiMethodCall, ASC.Api"
            inject-properties="yes"/>
        <component
            type="ASC.Api.Impl.ApiArgumentBuilder, ASC.Api"
            service="ASC.Api.Interfaces.IApiArgumentBuilder, ASC.Api"
            instance-scope="single-instance"
            inject-properties="yes"/>
        <component
            type="ASC.Api.Impl.Serializers.JsonNetSerializer, ASC.Api"
            service="ASC.Api.Interfaces.IApiSerializer, ASC.Api"
            instance-scope="single-instance"
            inject-properties="yes"
            name="json.net.serializer"/>
        <component
            type="ASC.Api.Impl.Responders.ContentResponder, ASC.Api"
            service="ASC.Api.Interfaces.IApiResponder, ASC.Api"
            instance-scope="single-instance"
            inject-properties="yes"
            name="content_responder"/>
        <component
            type="ASC.Api.Impl.Responders.DirectResponder, ASC.Api"
            service="ASC.Api.Interfaces.IApiResponder, ASC.Api"
            instance-scope="single-instance"
            inject-properties="yes"
            name="direct_responder"/>
        <component
            type="ASC.Api.Impl.Serializers.SerializerResponder, ASC.Api"
            service="ASC.Api.Interfaces.IApiResponder, ASC.Api"
            instance-scope="single-instance"
            inject-properties="yes"
            name="serialzer"/>
        <component
            type="ASC.Api.Impl.Invokers.ApiSimpleMethodInvoker, ASC.Api"
            service="ASC.Api.Interfaces.IApiMethodInvoker, ASC.Api"
            instance-scope="single-instance"
            inject-properties="yes"/>
        <component
            type="ASC.Api.Impl.ApiStoragePath, ASC.Api"
            service="ASC.Api.Interfaces.IApiStoragePath, ASC.Api"
            instance-scope="single-instance"
            inject-properties="yes"/>
        <component
            type="ASC.Api.Impl.ApiKeyValueInMemoryStorage, ASC.Api"
            service="ASC.Api.Interfaces.Storage.IApiKeyValueStorage, ASC.Api"
            instance-scope="single-instance"
            inject-properties="yes"/>
        <component
            type="ASC.Api.Impl.ApiRouteConfigurator, ASC.Api"
            service="ASC.Api.Interfaces.IApiRouteConfigurator, ASC.Api"
            instance-scope="single-instance"
            inject-properties="yes"/>
        <component
            type="ASC.Api.Impl.Routing.ApiRouteRegistrator, ASC.Api"
            service="ASC.Api.Interfaces.IApiRouteRegistrator, ASC.Api"
            instance-scope="single-instance"
            inject-properties="yes"
            name="rest"/>
        <component
            type="ASC.Api.Impl.Routing.ApiBatchRouteRegitrator, ASC.Api"
            service="ASC.Api.Interfaces.IApiRouteRegistrator, ASC.Api"
            instance-scope="single-instance"
            inject-properties="yes"
            name="batch"/>
        <component
            type="ASC.Api.Impl.Routing.ApiAccessControlRouteRegistrator, ASC.Api"
            service="ASC.Api.Interfaces.IApiRouteRegistrator, ASC.Api"
            instance-scope="single-instance"
            inject-properties="yes"
            name="access"/>
        <component
            type="ASC.Api.Impl.ApiHttpHandler, ASC.Api"
            service="ASC.Api.Interfaces.IApiHttpHandler, ASC.Api"
            inject-properties="yes"/>
        <component
            type="ASC.Api.Impl.ApiRouteHandler, ASC.Api"
            service="ASC.Api.Interfaces.IApiRouteHandler, ASC.Api"
            inject-properties="yes"/>
        <component
            type="ASC.Api.Batch.ApiBatchHttpHandler, ASC.Api"
            inject-properties="yes"/>
        <component
            type="ASC.Api.Batch.ApiBatchRouteHandler, ASC.Api"
            inject-properties="yes"/>
        <component
          type="ASC.Api.Impl.ApiContext, ASC.Api"
          instance-scope="per-lifetime-scope"/>
        <component
          type="ASC.Api.Impl.ApiStandartResponce, ASC.Api"
          service="ASC.Api.Interfaces.IApiStandartResponce, ASC.Api"
          inject-properties="yes"/>
      </container>
      <container name="files">
        <component
          type="ASC.Files.Thirdparty.ProviderDao.ProviderDaoFactory, ASC.Files.Thirdparty"
          service="ASC.Files.Core.IDaoFactory, ASC.Web.Files"
          instance-scope="single-instance"/>
        <component
          type="ASC.Web.Files.Services.WCFService.FileStorageServiceController, ASC.Web.Files"
          service="ASC.Web.Files.Services.WCFService.IFileStorageService, ASC.Web.Files"
          instance-scope="single-instance"/>
      </container>
      <container name="projects">
        <component
          type="ASC.Projects.Data.DAO.CachedProjectDao, ASC.Web.Projects"
          service="ASC.Projects.Core.DataInterfaces.IProjectDao, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes" />
        <component
          type="ASC.Projects.Data.DAO.ParticipantDao, ASC.Web.Projects"
          service="ASC.Projects.Core.DataInterfaces.IParticipantDao, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Data.DAO.CachedMilestoneDao, ASC.Web.Projects"
          service="ASC.Projects.Core.DataInterfaces.IMilestoneDao, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Data.DAO.CachedTaskDao, ASC.Web.Projects"
          service="ASC.Projects.Core.DataInterfaces.ITaskDao, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Data.DAO.CachedSubtaskDao, ASC.Web.Projects"
          service="ASC.Projects.Core.DataInterfaces.ISubtaskDao, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Data.DAO.CachedMessageDao, ASC.Web.Projects"
          service="ASC.Projects.Core.DataInterfaces.IMessageDao, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Data.DAO.CommentDao, ASC.Web.Projects"
          service="ASC.Projects.Core.DataInterfaces.ICommentDao, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Data.DAO.TagDao, ASC.Web.Projects"
          service="ASC.Projects.Core.DataInterfaces.ITagDao, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Data.DAO.TemplateDao, ASC.Web.Projects"
          service="ASC.Projects.Core.DataInterfaces.ITemplateDao, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Data.DAO.TimeSpendDao, ASC.Web.Projects"
          service="ASC.Projects.Core.DataInterfaces.ITimeSpendDao, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Data.DAO.ReportDao, ASC.Web.Projects"
          service="ASC.Projects.Core.DataInterfaces.IReportDao, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Data.DAO.SearchDao, ASC.Web.Projects"
          service="ASC.Projects.Core.DataInterfaces.ISearchDao, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Data.DaoFactory, ASC.Web.Projects"
          service="ASC.Projects.Core.DataInterfaces.IDaoFactory, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Engine.ProjectSecurity, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Engine.EngineFactory, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Engine.FileEngine, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Engine.MilestoneEngine, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Engine.TaskEngine, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Engine.SubtaskEngine, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Engine.MessageEngine, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Engine.CommentEngine, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Engine.SearchEngine, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Engine.TimeTrackingEngine, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Engine.ParticipantEngine, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Engine.TagEngine, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Engine.ReportEngine, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Engine.TemplateEngine, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.Projects.Engine.CachedProjectEngine, ASC.Web.Projects"
          service="ASC.Projects.Engine.ProjectEngine, ASC.Web.Projects"
          instance-scope="per-request"
          inject-properties="yes"/>
      </container>
      <container name="crm">
        <component
          type="ASC.CRM.Core.Dao.TaskDao, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.CRM.Core.Dao.ListItemDao, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.CRM.Core.Dao.CachedContactDao, ASC.Web.CRM"
          service="ASC.CRM.Core.Dao.ContactDao, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.CRM.Core.Dao.CustomFieldDao, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.CRM.Core.Dao.CachedDealDao, ASC.Web.CRM"
          service="ASC.CRM.Core.Dao.DealDao, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.CRM.Core.Dao.CachedDealMilestoneDao, ASC.Web.CRM"
          service="ASC.CRM.Core.Dao.DealMilestoneDao, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.CRM.Core.Dao.CachedListItem, ASC.Web.CRM"
          service="ASC.CRM.Core.Dao.ListItemDao, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.CRM.Core.Dao.TagDao, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.CRM.Core.Dao.SearchDao, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.CRM.Core.Dao.CachedRelationshipEventDao, ASC.Web.CRM"
          service="ASC.CRM.Core.Dao.RelationshipEventDao, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.CRM.Core.Dao.FileDao, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.CRM.Core.Dao.CachedCasesDao, ASC.Web.CRM"
          service="ASC.CRM.Core.Dao.CasesDao, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.CRM.Core.Dao.TaskTemplateContainerDao, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.CRM.Core.Dao.TaskTemplateDao, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.CRM.Core.Dao.ReportDao, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.CRM.Core.Dao.CurrencyRateDao, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.CRM.Core.Dao.CurrencyInfoDao, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.CRM.Core.Dao.ContactInfoDao, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.CRM.Core.Dao.CachedInvoiceDao, ASC.Web.CRM"
          service="ASC.CRM.Core.Dao.InvoiceDao, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.CRM.Core.Dao.CachedInvoiceItemDao, ASC.Web.CRM"
          service="ASC.CRM.Core.Dao.InvoiceItemDao, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.CRM.Core.Dao.CachedInvoiceTaxDao, ASC.Web.CRM"
          service="ASC.CRM.Core.Dao.InvoiceTaxDao, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.CRM.Core.Dao.CachedInvoiceLineDao, ASC.Web.CRM"
          service="ASC.CRM.Core.Dao.InvoiceLineDao, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.VoipService.Dao.CachedVoipDao, ASC.VoipService"
          service="ASC.VoipService.Dao.VoipDao, ASC.VoipService"
          instance-scope="per-request"
          inject-properties="yes"/>
        <component
          type="ASC.CRM.Core.Dao.DaoFactory, ASC.Web.CRM"
          instance-scope="per-request"
          inject-properties="yes"/>
      </container>
      <container name="search">
        <component
          service="ASC.ElasticSearch.Wrapper, ASC.ElasticSearch"
          type="ASC.Web.Projects.Core.Search.ProjectsWrapper, ASC.Web.Projects"
          instance-scope="single-instance">
        </component>
        <component
          service="ASC.ElasticSearch.Wrapper, ASC.ElasticSearch"
          type="ASC.Web.Projects.Core.Search.TasksWrapper, ASC.Web.Projects"
          instance-scope="single-instance">
        </component>
        <component
          service="ASC.ElasticSearch.Wrapper, ASC.ElasticSearch"
          type="ASC.Web.Projects.Core.Search.MilestonesWrapper, ASC.Web.Projects"
          instance-scope="single-instance">
        </component>
        <component
          service="ASC.ElasticSearch.Wrapper, ASC.ElasticSearch"
          type="ASC.Web.Projects.Core.Search.SubtasksWrapper, ASC.Web.Projects"
          instance-scope="single-instance">
        </component>
        <component
          service="ASC.ElasticSearch.Wrapper, ASC.ElasticSearch"
          type="ASC.Web.Projects.Core.Search.DiscussionsWrapper, ASC.Web.Projects"
          instance-scope="single-instance">
        </component>
        <component
          service="ASC.ElasticSearch.Wrapper, ASC.ElasticSearch"
          type="ASC.Web.Projects.Core.Search.CommentsWrapper, ASC.Web.Projects"
          instance-scope="single-instance">
        </component>
        <component
        service="ASC.ElasticSearch.Wrapper, ASC.ElasticSearch"
        type="ASC.Web.Files.Core.Search.FilesWrapper, ASC.Web.Files"
        instance-scope="single-instance">
        </component>
        <component
          service="ASC.ElasticSearch.Wrapper, ASC.ElasticSearch"
          type="ASC.Web.Files.Core.Search.FoldersWrapper, ASC.Web.Files"
          instance-scope="single-instance">
        </component>
      </container>
    </components>
  </autofac>

</configuration>
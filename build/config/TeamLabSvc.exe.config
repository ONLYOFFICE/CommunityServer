<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="teamlab" type="ASC.TeamLabSvc.Configuration.TeamLabSvcConfigurationSection, TeamLabSvc" />
    <section name="notify" type="ASC.Notify.Config.NotifyServiceCfgSectionHandler, ASC.Notify" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog" />
    <section name="storage" type="ASC.Data.Storage.Configuration.StorageConfigurationSection, ASC.Data.Storage" />
    <section name="backup" type="ASC.Data.Backup.Service.BackupConfigurationSection, ASC.Data.Backup" />
    <section name="autoreply" type="ASC.Mail.Autoreply.AutoreplyServiceConfiguration, ASC.Mail.Autoreply" />
    <section name="feed" type="ASC.Feed.Aggregator.Config.FeedConfigurationSection, ASC.Feed.Aggregator" />
    <section name="healthCheck" type="ASC.HealthCheck.Settings.HealthCheckCfgSectionHandler, ASC.HealthCheck" />
    <section name="socketio" type="ASC.Socket.IO.Svc.SocketIOCfgSectionHandler, ASC.Socket.IO.Svc" />
    <section name="thumb" type="ASC.Thumbnails.Svc.ConfigHandler, ASC.Thumbnails.Svc" />
    <section name="ssoauth" type="ASC.SsoAuth.Svc.ConfigHandler, ASC.SsoAuth.Svc" />
    <section name="urlshortener" type="ASC.UrlShortener.Svc.ConfigHandler, ASC.UrlShortener.Svc" />
    <section name="radicale" type="ASC.Radicale.RadicaleCfgSectionHandler, ASC.Radicale" />
    <section name="apiClient" type="ASC.Api.Client.ApiClientConfiguration, ASC.Api.Client" />
    <section name="autofac" type="ASC.Common.DependencyInjection.AutofacConfigurationSection, ASC.Common" />
    <section name="consumers" type="ASC.Core.Common.Configuration.ConsumerConfigurationSection, ASC.Core.Common" />
    <section name="thumbnailBuilder" type="ASC.Files.ThumbnailBuilder.ConfigSection, ASC.Files.ThumbnailBuilder" />
    <section name="redisCacheClient" type="StackExchange.Redis.Extensions.LegacyConfiguration.RedisCachingSectionHandler, StackExchange.Redis.Extensions.LegacyConfiguration" />
  </configSections>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Diagnostics.DiagnosticSource" culture="neutral" publicKeyToken="cc7b13ffcd2ddd51" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.5.0" newVersion="4.0.5.0" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="BouncyCastle.Crypto" publicKeyToken="0e99375e54769942" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.8.6.1" newVersion="1.8.5.0" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Google.Api.Gax" culture="neutral" publicKeyToken="3ec5ea7f18953e47" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Google.Api.Gax.Rest" culture="neutral" publicKeyToken="3ec5ea7f18953e47" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Google.Apis" culture="neutral" publicKeyToken="4b01fa6e34db77ab" />
        <bindingRedirect oldVersion="0.0.0.0-1.45.0.0" newVersion="1.45.0.0" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Google.Apis.Auth" culture="neutral" publicKeyToken="4b01fa6e34db77ab" />
        <bindingRedirect oldVersion="0.0.0.0-1.45.0.0" newVersion="1.45.0.0" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Google.Apis.Core" culture="neutral" publicKeyToken="4b01fa6e34db77ab" />
        <bindingRedirect oldVersion="0.0.0.0-1.45.0.0" newVersion="1.45.0.0" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Google.Apis.Storage.v1" culture="neutral" publicKeyToken="4b01fa6e34db77ab" />
        <bindingRedirect oldVersion="0.0.0.0-1.45.0.1911" newVersion="1.45.0.1911" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Google.Protobuf" culture="neutral" publicKeyToken="a7d26565bac4d604" />
        <bindingRedirect oldVersion="0.0.0.0-3.11.4.0" newVersion="3.11.4.0" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="log4net" culture="neutral" publicKeyToken="669e0ddf0bb1aa2a" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.8.0" newVersion="2.0.8.0" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Extensions.DependencyInjection.Abstractions" culture="neutral" publicKeyToken="adb9793829ddae60" />
        <bindingRedirect oldVersion="0.0.0.0-2.1.1.0" newVersion="2.1.1.0" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" culture="neutral" publicKeyToken="30ad4fe6b2a6aeed" />
        <bindingRedirect oldVersion="0.0.0.0-12.0.0.0" newVersion="12.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="BouncyCastle.Crypto" culture="neutral" publicKeyToken="0e99375e54769942" />
        <bindingRedirect oldVersion="0.0.0.0-1.8.5.0" newVersion="1.8.5.0" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="StackExchange.Redis.Extensions.Core" culture="neutral" publicKeyToken="d7d863643bcd13ef" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.5.0" newVersion="4.0.5.0" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Buffers" culture="neutral" publicKeyToken="cc7b13ffcd2ddd51" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.3.0" newVersion="4.0.3.0" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Memory" culture="neutral" publicKeyToken="cc7b13ffcd2ddd51" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.1.1" newVersion="4.0.1.1" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Runtime.CompilerServices.Unsafe" culture="neutral" publicKeyToken="b03f5f7f11d50a3a" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.4.1" newVersion="4.0.4.1" />
      </dependentAssembly>
    </assemblyBinding>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" culture="neutral" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-1.5.2.14234" newVersion="1.5.2.14234" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.data>
    <DbProviderFactories>
      <clear />
      <add name="MySQL Data Provider" invariant="MySql.Data.MySqlClient" description=".Net Framework Data Provider for MySQL" type="MySql.Data.MySqlClient.MySqlClientFactory, MySql.Data" />
    </DbProviderFactories>
  </system.data>
  <appSettings>
    <add key="core.base-domain" value="localhost" />
    <add key="core.machinekey" value="Vskoproizvolny Salt par Chivreski" />
    <add key="files.docservice.secret" value="" />
    <add key="files.docservice.secret.header" value="" />
    <add key="files.docservice.timeout" value="50000" />
    <add key="files.docservice.url.public" value="" />
    <add key="files.docservice.url.internal" value="" />
    <add key="files.docservice.url.portal" value="" />
    <add key="files.index.formats" value=".pptx|.xlsx|.docx" />
    <add key="messaging.enabled" value="true" />
    <add key="temp" value="..\..\Data\temp" />
    <add key="web.help-center" value="https://helpcenter.onlyoffice.com/{ru|de|fr|es|lv|it}" />
    <add key="web.hub.internal" value="http://localhost:9899/" />
    <add key="web.controlpanel.url" value="" />
    <add key="license.file.path" value="" />
    <add key="resources.from-db" value="true" />
    <add key="mail.certificate-permit" value="true" />
  </appSettings>
  <connectionStrings>
    <clear />
    <add name="default" connectionString="Server=localhost;Database=onlyoffice;User ID=root;Password=;Pooling=True;Character Set=utf8;AutoEnlist=false;SSL Mode=none;AllowPublicKeyRetrieval=true;Connection Timeout=30;Maximum Pool Size=300;" providerName="MySql.Data.MySqlClient" />
  </connectionStrings>
  <teamlab>
    <services>
      <add type="ASC.Socket.IO.Svc.Launcher, ASC.Socket.IO.Svc" />
      <add type="ASC.Radicale.Launcher, ASC.Radicale" />
      <add type="ASC.Notify.NotifyServiceLauncher, ASC.Notify" />
      <add type="ASC.Feed.Aggregator.FeedAggregatorLauncher, ASC.Feed.Aggregator" />
      <add type="ASC.Data.Backup.Service.BackupServiceLauncher, ASC.Data.Backup" />
      <!-- <add type="ASC.Mail.Autoreply.AutoreplyServiceController, ASC.Mail.Autoreply"/> -->
      <add type="ASC.Data.Storage.Migration.Launcher, ASC.Data.Storage.Migration" />
      <add type="ASC.ElasticSearch.Launcher, ASC.ElasticSearch" />
      <add type="ASC.Thumbnails.Svc.Launcher, ASC.Thumbnails.Svc" />
      <add type="ASC.SsoAuth.Svc.Launcher, ASC.SsoAuth.Svc" />
      <add type="ASC.UrlShortener.Svc.Launcher, ASC.UrlShortener.Svc" />
      <add type="ASC.TelegramService.Launcher, ASC.TelegramService" />
      <add type="ASC.Data.Storage.Encryption.Launcher, ASC.Data.Storage.Encryption" />
      <add type="ASC.Files.ThumbnailBuilder.Launcher, ASC.Files.ThumbnailBuilder" />
    </services>
  </teamlab>
  <apiClient root="/api/2.0/" scheme="Http" />
  <notify connectionStringName="default">
    <process maxThreads="2" bufferSize="10" maxAttempts="10" attemptsInterval="0:5:0" />
    <senders>
      <sender name="email.sender" type="ASC.Core.Notify.Senders.SmtpSender, ASC.Core.Common" host="" port="" userName="" password="" enableSsl="" useCoreSettings="true" />
      <sender name="messanger.sender" type="ASC.Core.Notify.Senders.JabberSender, ASC.Core.Common" />
      <sender name="telegram.sender" type="ASC.Core.Notify.Senders.TelegramSender, ASC.Core.Common" />
    </senders>
    <schedulers>
      <scheduler name="WhatsNew" register="ASC.Web.Studio.Core.Notify.NotifyConfiguration.RegisterSendMethods, ASC.Web.Studio" />
      <scheduler name="Calendar" register="ASC.Api.Calendar.Notification.CalendarNotifyClient.RegisterSendMethod, ASC.Api.Calendar" />
      <scheduler name="Projects" register="ASC.Web.Projects.Configuration.ProductEntryPoint.RegisterSendMethods, ASC.Web.Projects" />
      <scheduler name="Birthdays" register="ASC.Web.Community.Birthdays.BirthdaysModule.RegisterSendMethod, ASC.Web.Community" />
      <scheduler name="CRM" register="ASC.Web.CRM.Configuration.ProductEntryPoint.RegisterSendMethods, ASC.Web.CRM" />
    </schedulers>
  </notify>
  <backup>
    <cleaner />
    <scheduler />
  </backup>
  <feed aggregatePeriod="0:3:0" />
  <autoreply mailFolder="..\..\Logs\" />
  <socketio path="..\ASC.Socket.IO" port="9899">
    <redis host="" port="" />
  </socketio>
  <urlshortener path="..\ASC.UrlShortener" port="9999" />
  <thumb path="..\ASC.Thumbnails" port="9800" />
  <ssoauth path="..\ASC.SsoAuth" port="9834" />
  <radicale path="">
  </radicale>
  <thumbnailBuilder connectionStringName="default" serverRoot="http://localhost/" attemptsLimit="10" />
  <system.serviceModel>
    <services>
      <service name="ASC.ElasticSearch.Service.Service" behaviorConfiguration="index">
        <endpoint address="net.tcp://0:9866/teamlabIndex" binding="netTcpBinding" contract="ASC.ElasticSearch.Service.IService" bindingConfiguration="index" />
      </service>
      <service name="ASC.Notify.NotifyService" behaviorConfiguration="notify">
        <endpoint address="net.tcp://0:9871/teamlabNotify" binding="netTcpBinding" contract="ASC.Notify.INotifyService" bindingConfiguration="notify" />
      </service>
      <service name="ASC.Data.Backup.Service.BackupService" behaviorConfiguration="backup">
        <endpoint address="net.tcp://0:9882/teamlabBackup" binding="netTcpBinding" contract="ASC.Core.Common.Contracts.IBackupService" bindingConfiguration="backup" />
      </service>
      <service name="ASC.Data.Storage.Migration.Service" behaviorConfiguration="migrate">
        <endpoint address="net.tcp://0:9883/teamlabStorageMigrate" binding="netTcpBinding" contract="ASC.Data.Storage.Migration.IService" bindingConfiguration="migrate" />
      </service>
      <service name="ASC.Data.Storage.Encryption.EncryptionService" behaviorConfiguration="encryption">
        <endpoint address="net.tcp://0:9884/teamlabStorageEncryption" binding="netTcpBinding" contract="ASC.Data.Storage.Encryption.IEncryptionService" bindingConfiguration="encryption" />
      </service>
      <service name="ASC.TelegramService.TelegramService" behaviorConfiguration="telegram">
        <endpoint address="net.tcp://0:9885/teamlabTelegram" binding="netTcpBinding" contract="ASC.Core.Common.Notify.ITelegramService" bindingConfiguration="telegram" />
      </service>
      <service name="ASC.Files.ThumbnailBuilder.Service" behaviorConfiguration="thumbnailBuilder">
        <endpoint address="net.tcp://0:9886/teamlabThumbnailBuilder" binding="netTcpBinding" contract="ASC.Web.Core.Files.IThumbnailBuilderService" bindingConfiguration="thumbnailBuilder" />
      </service>
      <service name="ASC.Feed.Aggregator.HealthCheckService" behaviorConfiguration="feed">
        <endpoint address="http://localhost:9808/teamlabFeed/health" binding="webHttpBinding" contract="ASC.Core.Common.Contracts.IHealthCheckService" behaviorConfiguration="Web" />
      </service>
    </services>
    <bindings>
      <netTcpBinding>
        <binding name="jabber" maxReceivedMessageSize="1000000" maxBufferSize="1000000" maxBufferPoolSize="1000000" maxConnections="1000000" portSharingEnabled="false" transactionFlow="false" listenBacklog="1000000">
          <security mode="None">
            <message clientCredentialType="None" />
            <transport protectionLevel="None" clientCredentialType="None" />
          </security>
          <reliableSession enabled="false" />
          <readerQuotas maxStringContentLength="1000000" maxArrayLength="1000000" />
        </binding>
        <binding name="signalr" maxReceivedMessageSize="1000000" maxBufferSize="1000000" maxBufferPoolSize="1000000" maxConnections="1000000" portSharingEnabled="false" transactionFlow="false" listenBacklog="1000000">
          <security mode="None">
            <message clientCredentialType="None" />
            <transport protectionLevel="None" clientCredentialType="None" />
          </security>
          <reliableSession enabled="false" />
          <readerQuotas maxStringContentLength="1000000" maxArrayLength="1000000" />
        </binding>
        <binding name="index" openTimeout="0:0:10" receiveTimeout="0:0:10" sendTimeout="0:0:10">
          <security mode="None" />
          <readerQuotas maxStringContentLength="1000000" />
        </binding>
        <binding name="notify" openTimeout="0:0:10" receiveTimeout="0:0:10" sendTimeout="0:0:10">
          <security mode="None" />
          <readerQuotas maxStringContentLength="1000000" />
        </binding>
        <binding name="backup" openTimeout="0:0:10" receiveTimeout="0:0:10" sendTimeout="0:0:10">
          <security mode="None" />
          <readerQuotas maxStringContentLength="1000000" />
        </binding>
        <binding name="migrate" openTimeout="0:0:10" receiveTimeout="0:0:10" sendTimeout="0:0:10">
          <security mode="None" />
          <readerQuotas maxStringContentLength="1000000" />
        </binding>
        <binding name="encryption" openTimeout="0:0:10" receiveTimeout="0:0:10" sendTimeout="0:0:10">
          <security mode="None" />
          <readerQuotas maxStringContentLength="1000000" />
        </binding>
        <binding name="telegram" openTimeout="0:0:10" receiveTimeout="0:0:10" sendTimeout="0:0:10">
          <security mode="None" />
          <readerQuotas maxStringContentLength="1000000" />
        </binding>
        <binding name="thumbnailBuilder" openTimeout="0:0:10" receiveTimeout="0:0:10" sendTimeout="0:0:10">
          <security mode="None" />
          <readerQuotas maxStringContentLength="1000000" />
        </binding>
      </netTcpBinding>
    </bindings>
    <client>
      <endpoint address="net.tcp://localhost:9865/teamlabJabber" binding="netTcpBinding" contract="ASC.Core.Notify.Jabber.IJabberService" bindingConfiguration="jabber" />
      <endpoint address="net.tcp://localhost:9871/teamlabNotify" binding="netTcpBinding" contract="ASC.Notify.INotifyService" bindingConfiguration="notify" />
      <endpoint address="net.tcp://localhost:9882/teamlabBackup" binding="netTcpBinding" contract="ASC.Core.Common.Contracts.IBackupService" bindingConfiguration="backup" />
      <endpoint address="net.tcp://localhost:9866/teamlabIndex" binding="netTcpBinding" contract="ASC.ElasticSearch.Service.IService" bindingConfiguration="index" />
      <endpoint address="net.tcp://localhost:9884/teamlabStorageEncryption" binding="netTcpBinding" contract="ASC.Data.Storage.Encryption.IEncryptionService" bindingConfiguration="encryption" />
      <endpoint address="net.tcp://localhost:9885/teamlabTelegram" binding="netTcpBinding" contract="ASC.Core.Common.Notify.ITelegramService" bindingConfiguration="telegram" />
      <endpoint address="net.tcp://localhost:9886/teamlabThumbnailBuilder" binding="netTcpBinding" contract="ASC.Web.Core.Files.IThumbnailBuilderService" bindingConfiguration="thumbnailBuilder" />
    </client>
    <behaviors>
      <serviceBehaviors>
        <behavior name="feed">
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="index">
          <serviceHealth httpGetEnabled="true" httpGetUrl="http://localhost:9810/teamlabIndex" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="notify">
          <serviceHealth httpGetEnabled="true" httpGetUrl="http://localhost:9810/teamlabNotify" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="backup">
          <serviceHealth httpGetEnabled="true" httpGetUrl="http://localhost:9810/teamlabBackup" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="migrate">
          <serviceHealth httpGetEnabled="true" httpGetUrl="http://localhost:9810/teamlabStorageMigrate" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="encryption">
          <serviceHealth httpGetEnabled="true" httpGetUrl="http://localhost:9810/teamlabStorageEncryption" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="telegram">
          <serviceHealth httpGetEnabled="true" httpGetUrl="http://localhost:9810/teamlabTelegram" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="thumbnailBuilder">
          <serviceHealth httpGetEnabled="true" httpGetUrl="http://localhost:9810/teamlabThumbnailBuilder" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="jabber">
          <serviceHealth httpGetEnabled="true" httpGetUrl="http://localhost:9810/teamlabJabber" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <serviceThrottling maxConcurrentCalls="500" maxConcurrentSessions="200" />
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="Web">
          <webHttp />
        </behavior>
      </endpointBehaviors>
    </behaviors>
  </system.serviceModel>
  <system.net>
    <connectionManagement>
      <add address="*" maxconnection="96" />
    </connectionManagement>
  </system.net>
  <storage file="..\..\WebStudio\web.storage.config" />
  <log4net>
    <addProperty os="UNIX">
      <key>UNIX:LogDirectory</key>
      <value>/var/log/onlyoffice/</value>
    </addProperty>
    <addProperty os="WINDOWS">
      <key>WINDOWS:LogDirectory</key>
      <value>..\..\Logs\</value>
    </addProperty>
    <logger name="ASC">
      <appender-ref ref="File" />
      <appender-ref ref="Console" />
      <level value="WARN" />
    </logger>
    <logger name="ASC.SQL" additivity="false">
      <level value="OFF" />
    </logger>
    <appender name="Console" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date %-5level %logger - %message%newline" />
      </layout>
    </appender>
    <appender name="File" type="ASC.Common.Logging.SelfCleaningAppender, ASC.Common">
      <file type="log4net.Util.PatternString">
        <converter>
          <name value="folder" />
          <type value="ASC.Common.Logging.SpecialFolderPathConverter, ASC.Common" />
        </converter>
        <conversionPattern value="%folder{LogDirectory}svc%folder{CommandLine:--log}" />
      </file>
      <encoding value="utf-8" />
      <staticLogFileName value="false" />
      <preserveLogFileNameExtension value="true" />
      <rollingStyle value="Composite" />
      <datePattern value=".MM-dd.lo\g" />
      <maximumFileSize value="50MB" />
      <maxSizeRollBackups value="-1" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date %-5level [%thread] %logger - %message%newline" />
      </layout>
    </appender>
    <appender name="Sql" type="ASC.Common.Logging.SelfCleaningAppender, ASC.Common">
      <file type="log4net.Util.PatternString">
        <converter>
          <name value="folder" />
          <type value="ASC.Common.Logging.SpecialFolderPathConverter, ASC.Common" />
        </converter>
        <conversionPattern value="%folder{LogDirectory}svc%folder{CommandLine:--log}.sql.log" />
      </file>
      <encoding value="utf-8" />
      <staticLogFileName value="false" />
      <preserveLogFileNameExtension value="true" />
      <rollingStyle value="Composite" />
      <datePattern value=".MM-dd" />
      <maximumFileSize value="50MB" />
      <maxSizeRollBackups value="-1" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%utcdate|%thread|%property{duration}|%message|%property{sql}|%property{sqlParams}%newline" />
      </layout>
    </appender>
  </log4net>
  <nlog>
    <extensions>
      <add assembly="ASC.Common" />
    </extensions>
    <variable name="logDirectory" value="..\..\Logs\" />
    <variable name="svcName" value="" />
    <conversionPattern value="" />
    <targets async="true">
      <default-target-parameters type="SelfCleaning" encoding="utf-8" archiveNumbering="DateAndSequence" archiveEvery="Day" archiveAboveSize="52428800" archiveDateFormat="MM-dd" keepFileOpen="true" enableArchiveFileCompression="true" layout="${date:universalTime=true:format=yyyy-MM-dd HH\:mm\:ss,fff} ${level:uppercase=true} [${threadid}] ${logger} - ${message} ${exception:format=ToString}" />
      <target name="Console" type="Console" layout="${date:universalTime=true:format=yyyy-MM-dd HH\:mm\:ss,fff} ${level:uppercase=true} [${threadid}] ${logger} - ${message}" />
      <target name="web" type="SelfCleaning" fileName="${logDirectory}svc${var:svcName}.log" />
      <target name="indexer" type="SelfCleaning" fileName="${logDirectory}svcIndexer.data.log" />
      <target name="sql" type="SelfCleaning" fileName="${logDirectory}svc${var:svcName}.sql.log" layout="${date:universalTime=true:format=yyyy-MM-dd HH\:mm\:ss,fff}|${threadid}|${event-properties:item=duration}|${message}|${event-properties:item=sql}|${event-properties:item=sqlParams}" />
    </targets>
    <rules>
      <logger name="ASC.SQL" minlevel="Warn" writeTo="" final="true" />
      <logger name="ASC.Indexer" minlevel="Error" writeTo="indexer,Console" final="true" />
      <logger name="ASC*" minlevel="Warn" writeTo="web,Console" />
    </rules>
  </nlog>
  <consumers configSource="web.consumers.config" />
  <autofac configSource="web.autofac.config" />
  <redisCacheClient ssl="false" connectTimeout="5000" database="0" password="">
    <hosts>
      <add host="127.0.0.1" cachePort="6379" />
    </hosts>
  </redisCacheClient>
</configuration>
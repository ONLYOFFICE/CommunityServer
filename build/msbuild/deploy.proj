<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Deploy">
  <UsingTask AssemblyFile="MSBuild.Community.Tasks.dll" TaskName="MSBuild.Community.Tasks.XmlUpdate" />
  <UsingTask AssemblyFile="MSBuild.Community.Tasks.dll" TaskName="MSBuild.Community.Tasks.Xml.XmlMassUpdate" />
  <UsingTask AssemblyFile="MSBuild.Community.Tasks.dll" TaskName="MSBuild.Community.Tasks.CopyDirectory" />
  <UsingTask AssemblyFile="MSBuild.Community.Tasks.dll" TaskName="MSBuild.Community.Tasks.CopyFiles" />
  <UsingTask AssemblyFile="MSBuild.Community.Tasks.dll" TaskName="MSBuild.Community.Tasks.RemoveDuplicatesAssemblies" />
  <UsingTask AssemblyFile="MSBuild.Community.Tasks.dll" TaskName="MSBuild.Community.Tasks.RegexReplace" />
  <UsingTask AssemblyFile="MSBuild.Community.Tasks.dll" TaskName="MSBuild.Community.Tasks.CssCompress" />
  <UsingTask AssemblyFile="MSBuild.Community.Tasks.dll" TaskName="MSBuild.Community.Tasks.FileUpdate" />
  <UsingTask AssemblyFile="MSBuild.Community.Tasks.dll" TaskName="MSBuild.Community.Tasks.XmlRead" />
  <UsingTask AssemblyFile="$(RootDir)web\core\ASC.Web.Core.BuildTask\bin\$(Configuration)\ASC.Web.Core.BuildTask.dll" TaskName="ASC.Web.Core.BuildTask.GenerateBundle" />
  <UsingTask AssemblyFile="$(RootDir)web\core\ASC.Web.Core.BuildTask\bin\$(Configuration)\ASC.Web.Core.BuildTask.dll" TaskName="ASC.Web.Core.BuildTask.GenerateHelpCenterHtml" />
  <PropertyGroup>
    <BuildTargets Condition=" '$(BuildTargets)' == 'Build'  ">Restore;Build</BuildTargets>
    <Configuration Condition="$(Configuration)==''">Debug</Configuration>
    <RootDir Condition="$(RootDir)==''">..\..\</RootDir>
    <BinDir>$(RootDir)web\studio\ASC.Web.Studio\bin\</BinDir>
    <DeployTo Condition="$(DeployTo)==''">OPENSOURCE.SERVER</DeployTo>
    <DeployDir Condition="$(DeployDir)==''">$(RootDir)build\deploy\</DeployDir>
    <OutDir Condition="$(OutDir)==''">$(DeployDir)$(DeployTo)\</OutDir>
    <SplitServices Condition="$(SplitServices)==''">0</SplitServices>
    <LessCompile Condition="$(LessCompile)==''">1</LessCompile>
    <CssMinify Condition="$(CssMinify)==''">1</CssMinify>
    <GenerateBundle Condition="$(GenerateBundle)==''">0</GenerateBundle>
    <GenerateHelpCenterHtml Condition="$(GenerateHelpCenterHtml)==''">0</GenerateHelpCenterHtml>
    <Uploads Condition="'$(Uploads)' == ''">1</Uploads>
    <NuGetCommand Condition=" '$(OS)' == 'Windows_NT'">$(RootDir).nuget\NuGet.exe</NuGetCommand>
    <NuGetCommand Condition=" '$(OS)' != 'Windows_NT' ">mono $(RootDir).nuget\NuGet.exe</NuGetCommand>
  </PropertyGroup>
  <PropertyGroup>
    <LessCommand Condition=" '$(OS)' == 'Windows_NT'">$(RootDir)packages\dotless.1.5.2\tool\dotless.compiler.exe</LessCommand>
    <LessCommand Condition=" '$(OS)' != 'Windows_NT' ">mono $(RootDir)packages\dotless.1.5.2\tool\dotless.compiler.exe</LessCommand>
  </PropertyGroup>
  <ItemGroup>
    <MailServiceToDeploy Include="MailAggregator">
      <ProjPath>module\ASC.Mail\Services\ASC.Mail.Aggregator.CollectionService\ASC.Mail.Aggregator.CollectionService.csproj</ProjPath>
    </MailServiceToDeploy>
    <MailServiceToDeploy Include="MailAggregator">
      <ProjPath>module\ASC.Mail\Services\ASC.Mail.EmlDownloader\ASC.Mail.EmlDownloader.csproj</ProjPath>
    </MailServiceToDeploy>
    <MailServiceToDeploy Include="MailWatchdog">
      <ProjPath>module\ASC.Mail\Services\ASC.Mail.Watchdog.Service\ASC.Mail.Watchdog.Service.csproj</ProjPath>
    </MailServiceToDeploy>
    <MailServiceToDeploy Include="MailCleaner">
      <ProjPath>module\ASC.Mail\Services\ASC.Mail.StorageCleaner\ASC.Mail.StorageCleaner.Service.csproj</ProjPath>
    </MailServiceToDeploy>
  </ItemGroup>
  <ItemGroup>
    <ServiceToDeploy Include="SocketIO">
      <Launcher>ASC.Socket.IO.Svc.Launcher, ASC.Socket.IO.Svc</Launcher>
      <ProjPath>module\ASC.Socket.IO.Svc\ASC.Socket.IO.Svc.csproj</ProjPath>
    </ServiceToDeploy>
    <ServiceToDeploy Include="Telegram">
      <Launcher>ASC.TelegramService.Launcher, ASC.TelegramService</Launcher>
      <ProjPath>module\ASC.TelegramService\ASC.TelegramService.csproj</ProjPath>
    </ServiceToDeploy>
    <ServiceToDeploy Include="Thumbnails">
      <Launcher>ASC.Thumbnails.Svc.Launcher, ASC.Thumbnails.Svc</Launcher>
      <ProjPath>module\ASC.Thumbnails.Svc\ASC.Thumbnails.Svc.csproj</ProjPath>
    </ServiceToDeploy>
    <ServiceToDeploy Include="SsoAuth">
      <Launcher>ASC.SsoAuth.Svc.Launcher, ASC.SsoAuth.Svc</Launcher>
      <ProjPath>module\ASC.SsoAuth.Svc\ASC.SsoAuth.Svc.csproj</ProjPath>
    </ServiceToDeploy>
    <ServiceToDeploy Include="UrlShortener">
      <Launcher>ASC.UrlShortener.Svc.Launcher, ASC.UrlShortener.Svc</Launcher>
      <ProjPath>module\ASC.UrlShortener.Svc\ASC.UrlShortener.Svc.csproj</ProjPath>
    </ServiceToDeploy>
    <ServiceToDeploy Include="Radicale">
      <Launcher>ASC.Radicale.Launcher, ASC.Radicale</Launcher>
      <ProjPath>module\ASC.Radicale\ASC.Radicale.csproj</ProjPath>
    </ServiceToDeploy>
    <ServiceToDeploy Include="Notify">
      <Launcher>ASC.Notify.NotifyServiceLauncher, ASC.Notify</Launcher>
      <ProjPath>module\ASC.Notify\ASC.Notify\ASC.Notify.csproj</ProjPath>
    </ServiceToDeploy>
    <ServiceToDeploy Include="Index">
      <Launcher>ASC.ElasticSearch.Launcher, ASC.ElasticSearch</Launcher>
      <ProjPath>module\ASC.ElasticSearch\ASC.ElasticSearch.csproj</ProjPath>
    </ServiceToDeploy>
    <ServiceToDeploy Include="Feed">
      <Launcher>ASC.Feed.Aggregator.FeedAggregatorLauncher, ASC.Feed.Aggregator</Launcher>
      <ProjPath>module\ASC.Feed.Aggregator\ASC.Feed.Aggregator.csproj</ProjPath>
    </ServiceToDeploy>
    <ServiceToDeploy Include="Backup">
      <Launcher>ASC.Data.Backup.Service.BackupServiceLauncher, ASC.Data.Backup</Launcher>
      <ProjPath>common\ASC.Data.Backup\ASC.Data.Backup.csproj</ProjPath>
    </ServiceToDeploy>
    <ServiceToDeploy Include="Migrate">
      <Launcher>ASC.Data.Storage.Migration.Launcher, ASC.Data.Storage.Migration</Launcher>
      <ProjPath>common\ASC.Data.Storage.Migration\ASC.Data.Storage.Migration.csproj</ProjPath>
    </ServiceToDeploy>
    <ServiceToDeploy Include="Encryption">
      <Launcher>ASC.Data.Storage.Encryption.Launcher, ASC.Data.Storage.Encryption</Launcher>
      <ProjPath>common\ASC.Data.Storage.Encryption\ASC.Data.Storage.Encryption.csproj</ProjPath>
    </ServiceToDeploy>
    <ServiceToDeploy Include="ThumbnailBuilder">
      <Launcher>ASC.Files.ThumbnailBuilder.Launcher, ASC.Files.ThumbnailBuilder</Launcher>
      <ProjPath>module\ASC.Files.ThumbnailBuilder\ASC.Files.ThumbnailBuilder.csproj</ProjPath>
    </ServiceToDeploy>
  </ItemGroup>
  <ItemGroup>
    <WebToDeploy Include="$(RootDir)module\ASC.Files.Thirdparty\ASC.Files.Thirdparty.csproj" />
    <WebToDeploy Include="$(RootDir)web\studio\ASC.Web.Studio\Products\**\ASC.Web.*.csproj" Exclude="$(RootDir)web\studio\ASC.Web.Studio\Products\**\ASC.Web.*.Tests.csproj" />
    <WebToDeploy Include="$(RootDir)web\studio\ASC.Web.Studio\addons\**\ASC.Web.*.csproj" Exclude="$(RootDir)web\studio\ASC.Web.Studio\addons\**\ASC.Web.*.Tests.csproj" />
  </ItemGroup>
  <ItemGroup>
    <CommunityDeleteList Include="SingleSignOnSettings\SingleSignOnSettings.ascx" />
    <CommunityDeleteList Include="AdditionalWhiteLabel\AdditionalWhiteLabel.ascx" />
    <CommunityDeleteList Include="WhiteLabel\WhiteLabel.ascx" />
    <CommunityDeleteList Include="Restore\Restore.ascx" />
    <CommunityDeleteList Include="Backup\Backup.ascx" />
    <CommunityDeleteList Include="AuditTrail\AuditTrail.ascx" />
    <CommunityDeleteList Include="LdapSettings\LdapSettings.ascx" />
    <CommunityDeleteList Include="StorageSettings\StorageSettings.ascx" />
  </ItemGroup>
  <Target Name="Deploy">
    <Message Text="Deploy parameters:" />
    <Message Text="  SplitServices = $(SplitServices)" />
    <RemoveDir Directories="$(OutDir)" ContinueOnError="true" Condition="'$(LeaveOutDir)' != '0'" />
    <MSBuild Projects="$(MSBuildProjectFullPath)" Targets="DeployService" Properties="OutDir=$(OutDir);DeployTo=$(DeployTo);ServiceName=%(ServiceToDeploy.Identity);ProjPath=%(ServiceToDeploy.ProjPath);ServiceLauncher=%(ServiceToDeploy.Launcher);Disable_CopyWebApplication=true" />
    <MSBuild Projects="$(MSBuildProjectFullPath)" Targets="DeployMail" Properties="OutDir=$(OutDir);DeployTo=$(DeployTo);ServiceName=%(MailServiceToDeploy.Identity);ProjPath=%(MailServiceToDeploy.ProjPath);Disable_CopyWebApplication=true" />
    <CopyDirectory SourceFolder="$(RootDir)web\studio\ASC.Web.Studio\" DestinationFolder="$(OutDir)WebStudio" ExcludeRegex="\\Products\\Projects\\Test\\|\\Products\\People\\Tests\\|\\Data\\|\\obj\\|\\bin\\.*\.xml$|\\bin\\.*\.pdb$|\.sln$|\.cs$|\.csproj$|\.suo$|\.user$|\.mdb$|\.userprefs$|\.pfx$|\\static\\helpcenter\\.+" />
    <RemoveDuplicatesAssemblies SourceFolder="$(OutDir)WebStudio" />
    <CallTarget Targets="CssMinify" Condition=" '$(CssMinify)' == '1' " />
    <CallTarget Targets="LessCompile" Condition=" '$(LessCompile)' == '1' " />
    <CallTarget Targets="GenerateBundle" Condition=" '$(GenerateBundle)' == '1' " />
    <CallTarget Targets="GenerateHelpCenterHtml" Condition=" '$(GenerateHelpCenterHtml)' == '1' " />
    <CopyDirectory Condition=" '$(Uploads)' == '1' AND Exists('$(RootDir)web\studio\ASC.Web.Upload\') " SourceFolder="$(RootDir)web\studio\ASC.Web.Upload\" DestinationFolder="$(OutDir)Uploads" ExcludeRegex="\\Data\\|\\obj\\|\\bin\\.*\.xml$|\\bin\\.*\.pdb$|\.sln$|\.cs$|\.csproj$|\.suo$|\.user$|\.mdb$|\.userprefs$" />
    <CallTarget Targets="ChangeConfigs" Condition=" Exists( '$(RootDir)build\config\private\' ) " />
    <CreateItem Include="$(OutDir)WebStudio\web.appsettings.config;$(OutDir)WebStudio\web.connections.config;$(OutDir)WebStudio\web.storage.config;$(OutDir)WebStudio\web.autofac.config;$(OutDir)WebStudio\web.consumers.config">
      <Output ItemName="WebConfigurationFiles" TaskParameter="Include" />
    </CreateItem>
    <Copy Condition="Exists('$(RootDir)build\ManageServices.bat')" SourceFiles="$(RootDir)build\ManageServices.bat" DestinationFolder="$(OutDir)Services\TeamLabSvc\" />
    <Copy Condition="Exists('$(OutDir)Uploads\')" SourceFiles="@(WebConfigurationFiles)" DestinationFolder="$(OutDir)Uploads\" />
    <Copy SourceFiles="$(OutDir)WebStudio\web.storage.config" DestinationFiles="$(OutDir)Services\MailAggregator\web.storage.config" />
    <Copy SourceFiles="$(OutDir)WebStudio\web.consumers.config" DestinationFolder="$(OutDir)Services\MailAggregator\" />
    <Copy SourceFiles="$(OutDir)WebStudio\web.storage.config" DestinationFolder="$(OutDir)Services\MailCleaner\" />
    <Copy SourceFiles="$(OutDir)WebStudio\web.autofac.config" DestinationFolder="$(OutDir)Services\%(MailServiceToDeploy.Identity)\" />
    <Copy SourceFiles="$(RootDir)build\config\private\sp.pfx" DestinationFolder="$(OutDir)WebStudio\Certificates\" Condition="'$(DeployTo)'=='COM' Or '$(DeployTo)'=='EU.COM' Or '$(DeployTo)'=='SG.COM' Or '$(DeployTo)'=='INFO'" />
    <Delete Files="@(CommunityDeleteList-&gt;'$(OutDir)WebStudio\UserControls\Management\%(Identity)')" Condition="'$(DeployTo)'=='SERVER' Or '$(DeployTo)'=='UNIX.SERVER' Or '$(DeployTo)'=='AMI.SERVER'" />
    <Delete Files="$(OutDir)WebStudio\bin\Microsoft.VisualBasic.Activities.Compiler.dll" Condition=" Exists( '$(OutDir)WebStudio\bin\Microsoft.VisualBasic.Activities.Compiler.dll' ) " />
    <XmlUpdate XmlFileName="$(OutDir)Services\MailAggregator\web.storage.config" XPath="/storage/handler/add[@name='disc']/property/@value" Value="..\..\Data\" />
    <XmlUpdate XmlFileName="$(OutDir)Services\MailCleaner\web.storage.config" XPath="/storage/handler/add[@name='disc']/property/@value" Value="..\..\Data\" />
    <ItemGroup>
      <EncryptionDeleteList Include="$(OutDir)**\ASC.Data.Encryption.*" />
    </ItemGroup>
    <Delete Files="@(EncryptionDeleteList)" Condition="'$(DeployTo)'=='RU' Or '$(DeployTo)'=='R7-OFFICE.RU' Or '$(DeployTo)'=='R7-OFFICE.SERVER' Or '$(DeployTo)'=='R7-OFFICE.UNIX.SERVER'" />
  </Target>
  <Target Name="DeployService">
    <Message Text="Deploying service $(ServiceName)" />
    <PropertyGroup>
      <ServicePath Condition=" '$(SplitServices)' == '1' ">$(OutDir)Services\$(ServiceName)\</ServicePath>
      <ServicePath Condition=" '$(SplitServices)' != '1' ">$(OutDir)Services\TeamLabSvc\</ServicePath>
    </PropertyGroup>
    <Message Text="Deploying service path $([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)$(ServicePath)'))" />
    <MSBuild BuildInParallel="true" Projects="$(RootDir)$(ProjPath)" Targets="$(BuildTargets)" Properties="Configuration=$(Configuration);OutDir=$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)$(ServicePath)'));AlToolPath=%(AlToolPath.FullPath);Constants=$(Constants);Disable_CopyWebApplication=true" StopOnFirstFailure="true" />
    <ItemGroup>
      <ServiceFiles Include="$(RootDir)\web\studio\ASC.Web.Studio\web.autofac.config;$(RootDir)\web\studio\ASC.Web.Studio\web.consumers.config; $(RootDir)build\config\TeamLabSvc.exe.config;$(RootDir)module\ASC.TeamLabSvc\ASC.TeamLabSvc\bin\$(Configuration)\TeamLabSvc.exe" />
    </ItemGroup>
    <Copy SourceFiles="%(ServiceFiles.Identity)" DestinationFolder="$(ServicePath)" />
    <MSBuild Condition=" $(ServiceName) == 'Index' OR $(ServiceName) == 'Backup' OR $(ServiceName) == 'Notify'" BuildInParallel="true" Projects="%(WebToDeploy.Identity)" Targets="$(BuildTargets)" Properties="Configuration=$(Configuration);OutDir=$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)$(ServicePath)'));AlToolPath=%(AlToolPath.FullPath);Constants=$(Constants);Disable_CopyWebApplication=true" StopOnFirstFailure="true" />
    <MSBuild Condition="$(ServiceName) == 'Backup' OR $(ServiceName) == 'Notify'" BuildInParallel="true" Projects="$(RootDir)module\ASC.Api\ASC.Api.Calendar\ASC.Api.Calendar.csproj" Targets="$(BuildTargets)" Properties="Configuration=$(Configuration);OutDir=$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)$(ServicePath)'));AlToolPath=%(AlToolPath.FullPath);Constants=$(Constants);Disable_CopyWebApplication=true" StopOnFirstFailure="true" />
    <CopyDirectory Condition=" $(ServiceName) == 'SocketIO' AND Exists('$(RootDir)module\ASC.Socket.IO\') " SourceFolder="$(RootDir)module\ASC.Socket.IO\" DestinationFolder="$(OutDir)Services\ASC.Socket.IO" ExcludeRegex="\\typings\\|\.njsproj$|typings\.json$" />
    <CopyDirectory Condition=" $(ServiceName) == 'Thumbnails' AND Exists('$(RootDir)module\ASC.Thumbnails\') " SourceFolder="$(RootDir)module\ASC.Thumbnails\" DestinationFolder="$(OutDir)Services\ASC.Thumbnails" ExcludeRegex="\\typings\\|\.njsproj$|typings\.json$" />
    <CopyDirectory Condition=" $(ServiceName) == 'SsoAuth' AND Exists('$(RootDir)module\ASC.SsoAuth\') " SourceFolder="$(RootDir)module\ASC.SsoAuth\" DestinationFolder="$(OutDir)Services\ASC.SsoAuth" ExcludeRegex="\\typings\\|\.njsproj$|typings\.json$" />
    <CopyDirectory Condition=" $(ServiceName) == 'UrlShortener' AND Exists('$(RootDir)module\ASC.UrlShortener\') " SourceFolder="$(RootDir)module\ASC.UrlShortener\" DestinationFolder="$(OutDir)Services\ASC.UrlShortener" ExcludeRegex="\\typings\\|\.njsproj$|typings\.json$" />
    <RegexReplace Expression=".+\." Input="$(DeployTo)">
      <Output PropertyName="Substitution" TaskParameter="Output" />
    </RegexReplace>
    <CreateItem Include="$(Substitution)" Condition=" $(Substitution) != $(DeployTo) ">
      <Output ItemName="ConfigSubstitutionRoot" TaskParameter="Include" />
    </CreateItem>
    <RegexReplace Expression="^[^.]*\." Input="$(DeployTo)">
      <Output PropertyName="SubstitutionNext" TaskParameter="Output" />
    </RegexReplace>
    <CreateItem Include="$(SubstitutionNext)" Condition="$(Substitution) != $(SubstitutionNext) ">
      <Output ItemName="ConfigSubstitutionRoot" TaskParameter="Include" />
    </CreateItem>
    <CreateItem Include="$(DeployTo)">
      <Output ItemName="ConfigSubstitutionRoot" TaskParameter="Include" />
    </CreateItem>
    <XmlMassUpdate Condition="'%(ConfigSubstitutionRoot.Identity)' != '' AND Exists('..\config\private\TeamLabSvc.exe.Config.Substitutions.xml')" ContentFile="$(ServicePath)\TeamLabSvc.exe.config" SubstitutionsFile="..\config\private\TeamLabSvc.exe.Config.Substitutions.xml" ContentRoot="/" SubstitutionsRoot="/configuration/substitutions/%(ConfigSubstitutionRoot.Identity)" NamespaceDefinitions="un=http://schemas.microsoft.com/practices/2010/unity" />
    <XmlMassUpdate Condition="'%(ConfigSubstitutionRoot.Identity)' != '' AND Exists('..\config\private\Web.Consumers.Config.Substitutions.xml')" ContentFile="$(ServicePath)\web.consumers.config" SubstitutionsFile="..\config\private\Web.Consumers.Config.Substitutions.xml" ContentRoot="/" SubstitutionsRoot="/configuration/substitutions/%(ConfigSubstitutionRoot.Identity)" NamespaceDefinitions="un=http://schemas.microsoft.com/practices/2010/unity" />
    <XmlMassUpdate Condition="'%(ConfigSubstitutionRoot.Identity)' != '' AND Exists('..\config\private\Web.Autofac.Config.Substitutions.xml')" ContentFile="$(ServicePath)\web.autofac.config" SubstitutionsFile="..\config\private\Web.Autofac.Config.Substitutions.xml" ContentRoot="/" SubstitutionsRoot="/configuration/substitutions/%(ConfigSubstitutionRoot.Identity)" NamespaceDefinitions="un=http://schemas.microsoft.com/practices/2010/unity" />
    <XmlUpdate Condition="'$(SplitServices)' == '1'" XmlFileName="$(ServicePath)\TeamLabSvc.exe.config" XPath="/configuration/teamlab/services/add[not(@type='$(ServiceLauncher)')]" Delete="true" />
    <XmlUpdate Condition="'$(SplitServices)' == '1'" XmlFileName="$(ServicePath)\TeamLabSvc.exe.config" XPath="/configuration/log4net/appender[@name='File']/file/conversionPattern/@value" Value="%folder{LogDirectory}svc$(ServiceName)" />
    <XmlUpdate Condition="'$(SplitServices)' == '1'" XmlFileName="$(ServicePath)\TeamLabSvc.exe.config" XPath="/configuration/log4net/appender[@name='Sql']/file/conversionPattern/@value" Value="%folder{LogDirectory}svc$(ServiceName).SQL.log" />
    <XmlUpdate Condition="'$(ServiceLauncher)' != '' AND '$(SplitServices)' == '1'" XmlFileName="$(ServicePath)\TeamLabSvc.exe.config" XPath="/configuration/nlog/variable[@name='svcName']/@value" Value="$(ServiceName)" />
    <XmlRead Condition="Exists('..\config\private\Radicale.Config.Substitutions.xml')" Namespace="http://nant.sf.net/release/0.85/nant.xsd" Prefix="n" XPath="/n:configuration/n:substitutions/n:$(DeployTo)/n:property[@name='radicale_portal_url']/@value" XmlFileName="..\config\private\Radicale.Config.Substitutions.xml">
      <Output TaskParameter="Value" PropertyName="RadicalePortalUrl" />
    </XmlRead>
    <XmlRead Condition="Exists('..\config\private\Radicale.Config.Substitutions.xml')" Namespace="http://nant.sf.net/release/0.85/nant.xsd" Prefix="n" XPath="/n:configuration/n:substitutions/n:$(DeployTo)/n:property[@name='radicale_filesystem_folder']/@value" XmlFileName="..\config\private\Radicale.Config.Substitutions.xml">
      <Output TaskParameter="Value" PropertyName="RadicaleFilesystemFolder" />
    </XmlRead>
    <XmlRead Condition="Exists('..\config\private\Radicale.Config.Substitutions.xml')" Namespace="http://nant.sf.net/release/0.85/nant.xsd" Prefix="n" XPath="/n:configuration/n:substitutions/n:$(DeployTo)/n:property[@name='radicale_machine_key']/@value" XmlFileName="..\config\private\Radicale.Config.Substitutions.xml">
      <Output TaskParameter="Value" PropertyName="RadicaleMachineKey" />
    </XmlRead>
    <XmlRead Condition="Exists('..\config\private\Radicale.Config.Substitutions.xml')" Namespace="http://nant.sf.net/release/0.85/nant.xsd" Prefix="n" XPath="/n:configuration/n:substitutions/n:$(DeployTo)/n:property[@name='radicale_log_file']/@value" XmlFileName="..\config\private\Radicale.Config.Substitutions.xml">
      <Output TaskParameter="Value" PropertyName="RadicaleLogFile" />
    </XmlRead>
    <FileUpdate Condition=" $(ServiceName) == 'Radicale'" Files="$(ServicePath)\radicale.config" Encoding="ASCII" Regex="portal_url =.+" ReplacementText="portal_url = $(RadicalePortalUrl)" />
    <FileUpdate Condition=" $(ServiceName) == 'Radicale'" Files="$(ServicePath)\radicale.config" Encoding="ASCII" Regex="filesystem_folder =.+" ReplacementText="filesystem_folder = $(RadicaleFilesystemFolder)" />
    <FileUpdate Condition=" $(ServiceName) == 'Radicale'" Files="$(ServicePath)\radicale.log.config" Encoding="ASCII" Regex="args = .+" ReplacementText="args = ($(RadicaleLogFile),'midnight', 1, 7)" />
    <FileUpdate Condition=" $(ServiceName) == 'Radicale'" Files="$(ServicePath)\radicale.config" Encoding="ASCII" Regex="machine_key =.+" ReplacementText="machine_key = $(RadicaleMachineKey)" />
  </Target>
  <Target Name="DeployMail">
    <Message Text="Deploying service $(ServiceName)" />
    <PropertyGroup>
      <ServicePath>$(OutDir)Services\$(ServiceName)\</ServicePath>
    </PropertyGroup>
    <Message Text="Deploying service path $([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)$(ServicePath)'))" />
    <MSBuild BuildInParallel="true" Projects="$(RootDir)$(ProjPath)" Targets="$(BuildTargets)" Properties="Configuration=$(Configuration);OutDir=$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)$(ServicePath)'));AlToolPath=%(AlToolPath.FullPath);Constants=$(Constants);Disable_CopyWebApplication=true" StopOnFirstFailure="true" />
  </Target>
  <Target Name="BuildTask">
    <MSBuild BuildInParallel="true" Projects="$(RootDir)web\core\ASC.Web.Core.sln" Targets="Restore;ReBuild" Properties="Configuration=$(Configuration);AlToolPath=%(AlToolPath.FullPath);Constants=$(Constants);Disable_CopyWebApplication=true" StopOnFirstFailure="true" />
  </Target>
  <Target Name="GenerateBundle">
    <CallTarget Targets="BuildTask" />
    <GenerateBundle WebStudioFolder="$(OutDir)\WebStudio\" />
  </Target>
  <Target Name="GenerateHelpCenterHtml">
    <CallTarget Targets="BuildTask" Condition=" '$(GenerateBundle)' == '0' " />
    <GenerateHelpCenterHtml WebStudioFolder="$(OutDir)\WebStudio\" />
  </Target>
  <Target Name="LessCompile">
    <ItemGroup>
      <LessFilesInclude Include="$(OutDir)WebStudio\**\*.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\addons\calendar\UserControls\fullcalendar\css\fullcalendar.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\Products\Files\Controls\Tree\tree.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\Products\CRM\App_Themes\Default\css\base.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\UserControls\Common\SharingSettings\css\default\baseparams.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\UserControls\Common\SharingSettings\css\default\sharingsettings.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\skins\base.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\skins\default\actionpanel.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\skins\default\buttons.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\skins\default\common.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\skins\default\common_style.wide-screen.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\skins\default\contentmenu.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\skins\default\headers.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\skins\default\links.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\skins\default\lists.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\skins\*\params.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\skins\default\sidepanel.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\skins\default\tl-combobox.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\skins\default\topstudiopanel.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\skins\default\voip.phone.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\skins\default\whitelabel.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\skins\default\jquery-advansedfilter-theme.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\skins\default\jstree\**\*.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\addons\mail\App_Themes\Default\less\icons.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\addons\mail\App_Themes\Default\less\autocomplete.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\addons\mail\App_Themes\Default\less\message.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\addons\mail\App_Themes\Default\less\tags.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\addons\mail\App_Themes\Default\less\attachments.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\addons\mail\App_Themes\Default\less\popup.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\addons\mail\App_Themes\Default\less\accountspanel.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\addons\mail\App_Themes\Default\less\accounts.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\addons\mail\App_Themes\Default\less\contacts.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\addons\mail\App_Themes\Default\less\settings.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\addons\mail\App_Themes\Default\less\crm_integration.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\addons\mail\App_Themes\Default\less\accountpopup.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\addons\mail\App_Themes\Default\less\print.less" />
      <LessFilesExlude Include="$(OutDir)WebStudio\addons\mail\App_Themes\Default\less\administration.less" />
      <LessFiles Include="@(LessFilesInclude)" Exclude="@(LessFilesExlude)" />
    </ItemGroup>
    <Exec Command="$(NuGetCommand) install dotless -Version 1.5.2 -OutputDirectory $(RootDir)packages" />
    <Exec Command="$(LessCommand) -m &quot;%(LessFiles.FullPath)&quot; &quot;%(LessFiles-&gt;%(RootDir)%(Directory)%(Filename).min.css&quot;" />
  </Target>
  <Target Name="CssMinify">
    <ItemGroup>
      <CssFiles Include="$(OutDir)WebStudio\**\*.css" />
    </ItemGroup>
    <CssCompress SourceFiles="@(CssFiles)" DestinationFiles="%(RootDir)%(Directory)%(Filename).min.css" />
  </Target>
  <Target Name="ChangeConfigs">
    <ItemGroup>
      <ConfigFiles Include="$(OutDir)WebStudio\Web.config">
        <SubstitutionsFile>..\config\private\Web.Config.Substitutions.xml</SubstitutionsFile>
      </ConfigFiles>
      <ConfigFiles Include="$(OutDir)WebStudio\web.connections.config">
        <SubstitutionsFile>..\config\private\Web.Connections.Config.Substitutions.xml</SubstitutionsFile>
      </ConfigFiles>
      <ConfigFiles Include="$(OutDir)WebStudio\web.appsettings.config">
        <SubstitutionsFile>..\config\private\Web.AppSettings.Config.Substitutions.xml</SubstitutionsFile>
      </ConfigFiles>
      <ConfigFiles Include="$(OutDir)WebStudio\web.autofac.config">
        <SubstitutionsFile>..\config\private\Web.Autofac.Config.Substitutions.xml</SubstitutionsFile>
      </ConfigFiles>
      <ConfigFiles Include="$(OutDir)WebStudio\web.consumers.config">
        <SubstitutionsFile>..\config\private\Web.Consumers.Config.Substitutions.xml</SubstitutionsFile>
      </ConfigFiles>
      <ConfigFiles Include="$(OutDir)WebStudio\web.log4net.config">
        <SubstitutionsFile>..\config\private\Web.Log4net.Config.Substitutions.xml</SubstitutionsFile>
      </ConfigFiles>
      <ConfigFiles Include="$(OutDir)WebStudio\web.nlog.config">
        <SubstitutionsFile>..\config\private\Web.NLog.Config.Substitutions.xml</SubstitutionsFile>
      </ConfigFiles>
      <ConfigFiles Include="$(OutDir)WebStudio\web.storage.config">
        <SubstitutionsFile>..\config\private\Web.Storage.Config.Substitutions.xml</SubstitutionsFile>
      </ConfigFiles>
      <ConfigFiles Include="$(OutDir)Services\MailAggregator\ASC.Mail.Aggregator.CollectionService.exe.config">
        <SubstitutionsFile>..\config\private\Mail.Agg.Substitutions.xml</SubstitutionsFile>
      </ConfigFiles>
      <ConfigFiles Include="$(OutDir)Services\MailAggregator\ASC.Mail.EmlDownloader.exe.config">
        <SubstitutionsFile>..\config\private\Mail.Agg.Substitutions.xml</SubstitutionsFile>
      </ConfigFiles>
      <ConfigFiles Include="$(OutDir)Services\MailAggregator\mail.agg.log4net.config">
        <SubstitutionsFile>..\config\private\Mail.Agg.Log4net.Substitutions.xml</SubstitutionsFile>
      </ConfigFiles>
      <ConfigFiles Include="$(OutDir)Services\MailAggregator\mail.agg.nlog.config">
        <SubstitutionsFile>..\config\private\Mail.Agg.NLog.Substitutions.xml</SubstitutionsFile>
      </ConfigFiles>
      <ConfigFiles Include="$(OutDir)Services\MailWatchdog\ASC.Mail.Watchdog.Service.exe.config">
        <SubstitutionsFile>..\config\private\Mail.Dog.Substitutions.xml</SubstitutionsFile>
      </ConfigFiles>
      <ConfigFiles Include="$(OutDir)Services\MailWatchdog\mail.dog.nlog.config">
        <SubstitutionsFile>..\config\private\Mail.Dog.NLog.Substitutions.xml</SubstitutionsFile>
      </ConfigFiles>
      <ConfigFiles Include="$(OutDir)Services\MailWatchdog\mail.dog.log4net.config">
        <SubstitutionsFile>..\config\private\Mail.Dog.Log4net.Substitutions.xml</SubstitutionsFile>
      </ConfigFiles>
      <ConfigFiles Include="$(OutDir)Services\MailWatchdog\mail.dog.nlog.config">
        <SubstitutionsFile>..\config\private\Mail.Dog.NLog.Substitutions.xml</SubstitutionsFile>
      </ConfigFiles>
      <ConfigFiles Include="$(OutDir)Services\MailCleaner\ASC.Mail.StorageCleaner.exe.config">
        <SubstitutionsFile>..\config\private\Mail.Cln.Substitutions.xml</SubstitutionsFile>
      </ConfigFiles>
      <ConfigFiles Include="$(OutDir)Services\MailCleaner\mail.cln.log4net.config">
        <SubstitutionsFile>..\config\private\Mail.Cln.Log4net.Substitutions.xml</SubstitutionsFile>
      </ConfigFiles>
      <ConfigFiles Include="$(OutDir)Services\MailCleaner\mail.cln.nlog.config">
        <SubstitutionsFile>..\config\private\Mail.Cln.NLog.Substitutions.xml</SubstitutionsFile>
      </ConfigFiles>
      <ConfigFiles Remove="@(ConfigFiles)" Condition="!Exists('%(ConfigFiles.SubstitutionsFile)')" />
    </ItemGroup>
    <RegexReplace Expression="(.+)\." Input="$(DeployTo)">
      <Output PropertyName="Substitution" TaskParameter="Output" />
    </RegexReplace>
    <Message Text="ChangeConfigs: SubstitutionsRoot: /configuration/substitutions/$(Substitution)" />
    <XmlMassUpdate Condition="$(Substitution) != $(DeployTo)" ContentFile="%(ConfigFiles.FullPath)" ContentRoot="/" SubstitutionsFile="%(ConfigFiles.SubstitutionsFile)" SubstitutionsRoot="/configuration/substitutions/$(Substitution)" NamespaceDefinitions="un=http://schemas.microsoft.com/practices/2010/unity" />
    <RegexReplace Expression="^[^.]*\." Input="$(DeployTo)">
      <Output PropertyName="SubstitutionNext" TaskParameter="Output" />
    </RegexReplace>
    <Message Text="ChangeConfigs: SubstitutionsRoot: /configuration/substitutions/$(SubstitutionNext)" />
    <XmlMassUpdate Condition="$(Substitution) != $(SubstitutionNext)" ContentFile="%(ConfigFiles.FullPath)" ContentRoot="/" SubstitutionsFile="%(ConfigFiles.SubstitutionsFile)" SubstitutionsRoot="/configuration/substitutions/$(SubstitutionNext)" NamespaceDefinitions="un=http://schemas.microsoft.com/practices/2010/unity" />
    <Message Text="ChangeConfigs: SubstitutionsRoot: /configuration/substitutions/$(DeployTo)" />
    <XmlMassUpdate ContentFile="%(ConfigFiles.FullPath)" ContentRoot="/" SubstitutionsFile="%(ConfigFiles.SubstitutionsFile)" SubstitutionsRoot="/configuration/substitutions/$(DeployTo)" NamespaceDefinitions="un=http://schemas.microsoft.com/practices/2010/unity" />
  </Target>
  <Target Name="CopyConfigsForBackup">
    <CreateItem Include="$(Regions)">
      <Output ItemName="RegionsArray" TaskParameter="Include" />
    </CreateItem>
    <MSBuild Projects="$(MSBuildProjectFullPath)" Targets="CopyConfigForBackup" Properties="DeployTo=$(DeployTo);Region=%(RegionsArray.Identity)" />
  </Target>
  <Target Name="CopyConfigForBackup">
    <CreateItem Include="$(DeployDir)$(Region)\WebStudio\*.config">
      <Output ItemName="ConfigFiles" TaskParameter="Include" />
    </CreateItem>
    <Copy Condition="Exists('$(OutDir)Services\TeamLabSvc\')" SourceFiles="@(ConfigFiles)" DestinationFolder="$(OutDir)Services\TeamLabSvc\$(Region)\" />
    <Copy Condition="Exists('$(OutDir)Services\Backup\')" SourceFiles="@(ConfigFiles)" DestinationFolder="$(OutDir)Services\Backup\$(Region)\" />
  </Target>
</Project>